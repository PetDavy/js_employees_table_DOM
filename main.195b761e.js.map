{"version":3,"sources":["scripts/sortRows.js","scripts/addActive.js","scripts/updateRow.js","scripts/pushNotification.js","scripts/addEmployee.js","scripts/main.js"],"names":["sortRows","event","formatNumber","number","Number","slice","replace","target","textContent","rowSort","stringA","stringB","localeCompare","AgeA","AgeB","salaryA","salaryB","columnHead","comparingFunction","columnIndex","headerList","indexOf","sortedRows","tableRows","sort","rowA","rowB","columnA","querySelectorAll","columnB","direction","row","tBodies","prepend","append","tableHeader","cells","header","addActive","closest","classList","add","tableBody","rows","bodyRow","remove","updateRow","cell","initialValue","cellIndex","innerHTML","salaryNumber","cellInput","querySelector","className","focus","addEventListener","value","length","toLocaleString","e","code","blur","pushNotification","top","right","title","description","type","message","document","createElement","messageTitle","messageDescription","style","body","setTimeout","addEmployee","data","form","elements","preventDefault","isValidData","addRow","age","salary","newRow","insertAdjacentHTML","table","tHead","map","column","cityList","selectOptions","city","join"],"mappings":"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","file":"main.195b761e.js","sourceRoot":"..\\src","sourcesContent":["import { tableHeader, tableRows, headerList, table } from './main';\n\nexport function sortRows(event) {\n  const formatNumber = number => Number(number.slice(1).replace(',', ''));\n\n  const compareString = (stringA, stringB) => stringA.localeCompare(stringB);\n  const compareAge = (AgeA, AgeB) => +AgeA - +AgeB;\n  const compareSalary = (salaryA, salaryB) => {\n    return formatNumber(salaryA) - formatNumber(salaryB);\n  };\n\n  switch (event.target.textContent) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      rowSort(event.target, compareString);\n      break;\n\n    case 'Age':\n      rowSort(event.target, compareAge);\n      break;\n\n    case 'Salary':\n      rowSort(event.target, compareSalary);\n      break;\n  }\n}\n\nfunction rowSort(columnHead, comparingFunction) {\n  const columnIndex = headerList.indexOf(columnHead.textContent);\n\n  const sortedRows = [...tableRows].sort((rowA, rowB) => {\n    const columnA = rowA.querySelectorAll('td')[columnIndex].textContent;\n    const columnB = rowB.querySelectorAll('td')[columnIndex].textContent;\n\n    return comparingFunction(columnA, columnB);\n  });\n\n  if (columnHead.direction) {\n    for (const row of sortedRows) {\n      table.tBodies[0].prepend(row);\n    }\n  } else {\n    for (const row of sortedRows) {\n      table.tBodies[0].append(row);\n    }\n  }\n\n  for (const header of tableHeader.cells) {\n    if (header !== columnHead) {\n      header.direction = false;\n    }\n  }\n\n  columnHead.direction = !columnHead.direction;\n}\n","import { tableBody } from './main';\n\nexport function addActive(event) {\n  const row = event.target.closest('tr');\n\n  row.classList.add('active');\n\n  for (const bodyRow of tableBody.rows) {\n    if (bodyRow !== row) {\n      bodyRow.classList.remove('active');\n    }\n  }\n}\n","export function updateRow(event) {\n  const cell = event.target;\n  const initialValue = cell.textContent;\n\n  switch (cell.cellIndex) {\n    case 0:\n    case 1:\n    case 2:\n      cell.innerHTML = `\n      <input\n        name=\"cell-input\"\n        type=\"text\"\n        value=\"${cell.textContent}\"\n      >\n      </input>\n      `;\n      break;\n\n    case 3:\n      cell.innerHTML = `\n      <input\n        name=\"cell-input\"\n        type=\"number\"\n        value=\"${+cell.textContent}\"\n      >\n      </input>\n      `;\n      break;\n\n    case 4:\n      const salaryNumber = cell.textContent.slice(1).replace(',', '');\n\n      cell.innerHTML = `\n      $<input\n        name=\"cell-input\"\n        type=\"number\"\n        value=\"${+salaryNumber}\"\n      >\n      </input>\n      `;\n      break;\n  }\n\n  const cellInput = cell.querySelector('input');\n\n  if (cellInput) {\n    cellInput.className = 'cell-input';\n    cellInput.focus();\n\n    cellInput.addEventListener('blur', () => {\n      if (!cellInput.value.length) {\n        cell.innerHTML = `${initialValue}`;\n\n        return;\n      }\n\n      if (cell.cellIndex === 4) {\n        cell.innerHTML = `$${(+cellInput.value).toLocaleString('en-US')}`;\n      } else {\n        cell.innerHTML = `${cellInput.value}`;\n      }\n    });\n\n    cellInput.addEventListener('keydown', e => {\n      if (e.code === 'Enter') {\n        cellInput.blur();\n      }\n    });\n  }\n}\n","const pushNotification = (top, right, title, description, type) => {\n  const message = document.createElement('div');\n  const messageTitle = document.createElement('h2');\n  const messageDescription = document.createElement('p');\n\n  message.className = `notification ${type}`;\n  message.style.top = `${top}px`;\n  message.style.right = `${right}px`;\n\n  messageTitle.className = 'title';\n  messageTitle.textContent = title;\n\n  messageDescription.textContent = description;\n\n  message.append(messageTitle);\n  message.append(messageDescription);\n  document.body.append(message);\n\n  setTimeout(() => message.remove(), 2000);\n};\n\nexport { pushNotification };\n","import { form, tableBody } from './main';\nimport { pushNotification } from './pushNotification';\n\nexport function addEmployee(event) {\n  const data = form.elements;\n\n  event.preventDefault();\n\n  if (isValidData(data)) {\n    addRow(data);\n\n    pushNotification(\n      450,\n      275,\n      'Success',\n      'New employee successfully added.',\n      'success'\n    );\n  }\n}\n\nfunction isValidData(data) {\n  const age = +data[3].value;\n\n  if (data[0].value.length < 4) {\n    pushNotification(\n      450,\n      275,\n      'Too short name.',\n      'Name shout be at least 4 letters long.',\n      'error'\n    );\n\n    return false;\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification(\n      450,\n      275,\n      age < 18\n        ? 'You are too young for that.'\n        : 'You are too old for that.',\n      'Age shout be between 18 and 90',\n      'error'\n    );\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction addRow(data) {\n  const salary = `$${(+data[4].value).toLocaleString('en-US')}`;\n\n  const newRow = `\n  <tr>\n    <td>${data[0].value}</td>\n    <td>${data[1].value}</td>\n    <td>${data[2].value}</td>\n    <td>${data[3].value}</td>\n    <td>${salary}</td>\n  </tr>\n  `;\n\n  tableBody.insertAdjacentHTML('afterbegin', newRow);\n}\n","import { sortRows } from './sortRows';\nimport { addActive } from './addActive';\nimport { updateRow } from './updateRow';\nimport { addEmployee } from './addEmployee';\n\nconst table = document.querySelector('table');\nconst tableBody = table.tBodies[0];\nconst tableRows = tableBody.rows;\nconst tableHeader = table.tHead.rows[0];\n\nconst headerList = [...tableHeader.cells].map(column => column.textContent);\n\nconst form = document.createElement('form');\n\nconst cityList = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nconst selectOptions = cityList.map(city => `<option>${city}</option>`).join('');\n\nform.className = 'new-employee-form';\n\nform.innerHTML = `\n<label>Name:\n  <input name=\"name\" type=\"text\" required>\n</label>\n\n<label>Position:\n  <input name=\"position\" type=\"text\" required>\n</label>\n\n<label>Office:\n   <select name=\"office\" required>${selectOptions}</select>\n</label>\n\n<label>Age:\n  <input name=\"age\" type=\"number\" required>\n</label>\n\n<label>Salary:\n  <input name=\"salary\" type=\"number\" required>\n</label>\n\n<button type=\"submit\">Save to table</button>\n`;\n\ndocument.body.append(form);\n\ntableHeader.addEventListener('click', sortRows);\ntableBody.addEventListener('click', addActive);\ntableBody.addEventListener('dblclick', updateRow);\nform.addEventListener('submit', addEmployee);\n\nexport { tableBody, tableHeader, headerList, tableRows, table, form };\n"]}